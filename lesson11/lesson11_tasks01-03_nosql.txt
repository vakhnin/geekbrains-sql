/* Практическое задание #11 
 * "NoSQL". 
 */

/* Задание # 1.
 * В базе данных Redis подберите коллекцию для подсчета посещений с определенных IP-адресов.
*/

/* Для задачи подходит формат hash
 * Обращение по IP регистрируем командой HINCRBY
 * При первом обращение счетчик устанавливается в 1
 * При следующих увеличивается на 1
 */
127.0.0.1:6379> HINCRBY ips 192.168.0.1 1
(integer) 1
127.0.0.1:6379> HINCRBY ips 192.168.0.1 1
(integer) 2
127.0.0.1:6379> HINCRBY ips 192.168.0.1 1
(integer) 3
127.0.0.1:6379> HINCRBY ips 192.168.0.2 1
(integer) 1
127.0.0.1:6379> HINCRBY ips 192.168.0.3 1
(integer) 1
-- Получение обращений со всех IP
127.0.0.1:6379> HGETALL ips
1) "192.168.0.1"
2) "3"
3) "192.168.0.2"
4) "1"
5) "192.168.0.3"
6) "1"
-- Получение обращений только с IP из списка
127.0.0.1:6379> HMGET ips 192.168.0.1  192.168.0.2
1) "3"
2) "1"
127.0.0.1:6379> TYPE ips
hash



/* Задание # 2.
 * При помощи базы данных Redis решите задачу поиска имени пользователя по электронному адресу и наоборот, 
 * поиск электронного адреса пользователя по его имени.
*/

-- Заполняем данными
127.0.0.1:6379> HMSET user_name_1:mail1@gb.com name user_name_1 email mail1@gb.com
OK
127.0.0.1:6379> HMSET user_name_2:mail2@gb.com name user_name_2 email mail2@gb.com
OK
127.0.0.1:6379> HMSET user_name_3:mail3@gb.com name user_name_3 email mail3@gb.com
OK
-- Ищем пользователя по e-mail
127.0.0.1:6379> KEYS *:mail2@gb.com
1) "user_name_2:mail2@gb.com"
-- Ищем e-mail по имени пользователя
127.0.0.1:6379> KEYS user_name_3:*
1) "user_name_3:mail3@gb.com"

/* Задание # 3.
 * Организуйте хранение категорий и товарных позиций учебной базы данных shop в СУБД MongoDB. 
*/

 use shop;
 
 db.catalogs.insertMany([
	{"name" : "Процессоры"},
	{"name" : "Материнские платы"},
	{"name" : "Видеокарты"},
	{"name" : "Жесткие диски"},
	{"name" : "Оперативная память"},
	{"name" : "Расходные материалы"}
]);

db.products.insert({"name" : "Intel Core i3-8100", 
	"desсription" : "Процессор для настольных персональных компьютеров, основанных на платформе Intel.",
	"price" : 7890.00, 
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Процессоры'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "AMD FX-8320E", 
	"desсription" : "Процессор для настольных персональных компьютеров, основанных на платформе AMD.",
	"price" : 4780.00, 
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Процессоры'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "AMD FX-8320", 
	"desсription" : "Процессор для настольных персональных компьютеров, основанных на платформе AMD.",
	"price" : 7120.00, 
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Процессоры'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "ASUS ROG MAXIMUS X HERO",
	"desсription" : "Материнская плата ASUS ROG MAXIMUS X HERO, Z370, Socket 1151-V2, DDR4, ATX",
	"price" : 19310.00,
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Материнские платы'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "Gigabyte H310M S2H",
	"desсription" : "Материнская плата Gigabyte H310M S2H, H310, Socket 1151-V2, DDR4, mATX",
	"price" : 4790.00,
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Материнские платы'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "MSI B250M GAMING PRO",
	"desсription" : "Материнская плата MSI B250M GAMING PRO, B250, Socket 1151, DDR4, mATX",
	"price" : 5060.00,
	"catalog_id": new DBRef('Процессоры', db.catalogs.findOne({'name':'Материнские платы'})._id, "shop"), 
	"created_at" : new Date(), "updated_at" : new Date()
	});
	
db.products.insert({"name" : "MSI B250M",
	"desсription" : "Материнская плата MSI B250M, B250, Socket 1151, DDR4, mATX",
	"price" : 4060.00,
	"catalog_id": null, 
	"created_at" : new Date(), "updated_at" : new Date()
	});
